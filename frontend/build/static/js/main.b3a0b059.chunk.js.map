{"version":3,"sources":["component/Register.jsx","component/Login.jsx","App.js","index.js"],"names":["Register","setShowRegister","useState","success","setSuccess","error","setError","nameRef","useRef","emailRef","passwordRef","handleSubmit","e","a","preventDefault","newUser","username","current","value","email","password","axios","post","className","onSubmit","type","placeholder","ref","onClick","Login","setShowLogin","setCurrentUsername","myStorage","usernameRef","user","res","data","setItem","autoFocus","min","App","window","localStorage","getItem","currentUser","setCurrentUser","pins","setPins","currentPlaceId","setCurrentPlaceId","newPlace","setNewPlace","title","setTitle","showRegister","showLogin","desc","setDesc","rating","setRating","width","height","latitude","longitude","zoom","viewport","setViewport","newPin","lat","long","console","log","useEffect","get","allPins","getPins","mapStyle","mapboxApiAccessToken","process","onViewportChange","nextViewport","onDblClick","lngLat","map","p","offsetLeft","offsetTop","style","fontSize","color","cursor","id","_id","closeButton","closeOnClick","anchor","onClose","Array","fill","format","createdAt","onChange","target","removeItem","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.b3a0b059.chunk.js","sourcesContent":["import './register.css';\r\nimport { useState, useRef } from 'react';\r\nimport RoomIcon from '@material-ui/icons/Room';\r\nimport CancelIcon from '@material-ui/icons/Cancel';\r\nimport axios from 'axios';\r\nfunction Register({ setShowRegister }) {\r\n\tconst [success, setSuccess] = useState(false);\r\n\tconst [error, setError] = useState(false);\r\n\tconst nameRef = useRef();\r\n\tconst emailRef = useRef();\r\n\tconst passwordRef = useRef();\r\n\r\n\tconst handleSubmit = async (e) => {\r\n\t\te.preventDefault();\r\n\t\tconst newUser = {\r\n\t\t\tusername: nameRef.current.value,\r\n\t\t\temail: emailRef.current.value,\r\n\t\t\tpassword: passwordRef.current.value,\r\n\t\t};\r\n\t\ttry {\r\n\t\t\tawait axios.post('/users/register', newUser);\r\n\t\t\tsetError(false);\r\n\t\t\tsetSuccess(true);\r\n\t\t} catch (error) {\r\n\t\t\tsetError(true);\r\n\t\t}\r\n\t};\r\n\r\n\treturn (\r\n\t\t<div className='registerContainer'>\r\n\t\t\t<div className='logo'>\r\n\t\t\t\t<RoomIcon />\r\n\t\t\t\tTimeline\r\n\t\t\t</div>\r\n\t\t\t<form onSubmit={handleSubmit}>\r\n\t\t\t\t<input type='text' placeholder='Username' ref={nameRef} />\r\n\t\t\t\t<input type='email' placeholder='Email' ref={emailRef} />\r\n\t\t\t\t<input type='password' placeholder='Password' ref={passwordRef} />\r\n\t\t\t\t<button className='registerBtn'>Register</button>\r\n\t\t\t\t{success && (\r\n\t\t\t\t\t<span className='success'>\r\n\t\t\t\t\t\tSuccessfully registered, you can now login.\r\n\t\t\t\t\t</span>\r\n\t\t\t\t)}\r\n\t\t\t\t{error && (\r\n\t\t\t\t\t<span className='error'>\r\n\t\t\t\t\t\tSomething wrong happened, please try again.\r\n\t\t\t\t\t</span>\r\n\t\t\t\t)}\r\n\t\t\t</form>\r\n\t\t\t<CancelIcon\r\n\t\t\t\tclassName='registerCancel'\r\n\t\t\t\tonClick={() => setShowRegister(false)}\r\n\t\t\t/>\r\n\t\t</div>\r\n\t);\r\n}\r\n\r\nexport default Register;\r\n","import './login.css';\r\nimport { useState, useRef } from 'react';\r\nimport RoomIcon from '@material-ui/icons/Room';\r\nimport CancelIcon from '@material-ui/icons/Cancel';\r\nimport axios from 'axios';\r\n\r\nfunction Login({ setShowLogin, setCurrentUsername, myStorage }) {\r\n\tconst [error, setError] = useState(false);\r\n\tconst usernameRef = useRef();\r\n\tconst passwordRef = useRef();\r\n\r\n\tconst handleSubmit = async (e) => {\r\n\t\te.preventDefault();\r\n\t\tconst user = {\r\n\t\t\tusername: usernameRef.current.value,\r\n\t\t\tpassword: passwordRef.current.value,\r\n\t\t};\r\n\t\ttry {\r\n\t\t\tconst res = await axios.post('/users/login', user);\r\n\t\t\tsetCurrentUsername(res.data.username); // store the user info to local storage\r\n\t\t\tmyStorage.setItem('user', res.data.username);\r\n\t\t\tsetShowLogin(false);\r\n\t\t} catch (err) {\r\n\t\t\tsetError(true);\r\n\t\t}\r\n\t};\r\n\treturn (\r\n\t\t<div className='loginContainer'>\r\n\t\t\t<div className='logo'>\r\n\t\t\t\t<RoomIcon className='logoIcon' />\r\n\t\t\t\t<span>Timeline</span>\r\n\t\t\t</div>\r\n\t\t\t<form onSubmit={handleSubmit}>\r\n\t\t\t\t<input autoFocus placeholder='Username' ref={usernameRef} />\r\n\t\t\t\t<input\r\n\t\t\t\t\ttype='password'\r\n\t\t\t\t\tmin='6'\r\n\t\t\t\t\tplaceholder='Password'\r\n\t\t\t\t\tref={passwordRef}\r\n\t\t\t\t/>\r\n\t\t\t\t<button className='loginBtn' type='submit'>\r\n\t\t\t\t\tLogin\r\n\t\t\t\t</button>\r\n\t\t\t\t{error && <span className='failure'>Something went wrong!</span>}\r\n\t\t\t</form>\r\n\t\t\t<CancelIcon className='loginCancel' onClick={() => setShowLogin(false)} />\r\n\t\t</div>\r\n\t);\r\n}\r\n\r\nexport default Login;\r\n","import './app.css';\n\nimport { useState, useEffect } from 'react';\nimport ReactMapGL, { Marker, Popup } from 'react-map-gl';\nimport RoomIcon from '@material-ui/icons/Room'; //the material UI drop icon\nimport StarIcon from '@material-ui/icons/Star';\nimport axios from 'axios';\nimport { format } from 'timeago.js';\nimport Register from './component/Register.jsx';\nimport Login from './component/Login.jsx';\n\nfunction App() {\n\tconst myStorage = window.localStorage; // initialized the local storage\n\tconst [currentUser, setCurrentUser] = useState(myStorage.getItem('user'));\n\tconst [pins, setPins] = useState([]); //initialize the pin array\n\tconst [currentPlaceId, setCurrentPlaceId] = useState(null);\n\tconst [newPlace, setNewPlace] = useState(null); //create new pin when double click\n\tconst [title, setTitle] = useState(null);\n\tconst [showRegister, setShowRegister] = useState(false);\n\tconst [showLogin, setShowLogin] = useState(false);\n\tconst [desc, setDesc] = useState(null);\n\tconst [rating, setRating] = useState(0);\n\tconst [viewport, setViewport] = useState({\n\t\twidth: '100vw',\n\t\theight: '100vh',\n\t\tlatitude: 37.6,\n\t\tlongitude: -95.665,\n\t\tzoom: 4,\n\t});\n\n\tconst handleMarkerClick = (id, lat, long) => {\n\t\t//check the detail of the current pin you stayed on\n\t\tsetCurrentPlaceId(id);\n\t\tsetViewport({\n\t\t\t...viewport,\n\t\t\tlatitude: lat,\n\t\t\tlongitude: long,\n\t\t});\n\t};\n\n\t//add location when dblclick and create a new \"newPlace\" which will also trigger popup\n\tconst handleAddClick = (e) => {\n\t\tconst [long, lat] = e.lngLat;\n\t\tsetNewPlace({\n\t\t\tlat,\n\t\t\tlong,\n\t\t});\n\t};\n\n\t//handle form submit\n\tconst handleSubmit = async (e) => {\n\t\te.preventDefault();\n\t\tconst newPin = {\n\t\t\tusername: currentUser,\n\t\t\ttitle,\n\t\t\tdesc,\n\t\t\trating,\n\t\t\tlat: newPlace.lat,\n\t\t\tlong: newPlace.long,\n\t\t};\n\t\t//send to backend\n\t\ttry {\n\t\t\tconst res = await axios.post('/pins', newPin);\n\t\t\tsetPins([...pins, res.data]); //add the new pin to pin array\n\t\t\tsetNewPlace(null); //close the popup after submit\n\t\t} catch (error) {\n\t\t\tconsole.log(error);\n\t\t}\n\t};\n\n\tuseEffect(() => {\n\t\tconst getPins = async () => {\n\t\t\ttry {\n\t\t\t\tconst allPins = await axios.get('/pins'); //grab pins data from backend database and set to pins state\n\t\t\t\tsetPins(allPins.data);\n\t\t\t} catch (error) {\n\t\t\t\tconsole.log(error);\n\t\t\t}\n\t\t};\n\t\tgetPins();\n\t}, []);\n\n\tconst handleLogout = () => {\n\t\tmyStorage.removeItem('user');\n\t\tsetCurrentUser(null);\n\t};\n\treturn (\n\t\t<div className='App'>\n\t\t\t<ReactMapGL\n\t\t\t\t{...viewport}\n\t\t\t\tmapStyle='mapbox://styles/xcg1234/ckpoby1jx0xt117phqtxc5hhb'\n\t\t\t\tmapboxApiAccessToken={process.env.REACT_APP_MAPBOX} // linked to the token in env file\n\t\t\t\tonViewportChange={(nextViewport) => setViewport(nextViewport)}\n\t\t\t\tonDblClick={handleAddClick}\n\t\t\t>\n\t\t\t\t{pins.map((p) => (\n\t\t\t\t\t<div key={p.createdAt}>\n\t\t\t\t\t\t<Marker\n\t\t\t\t\t\t\tlatitude={p.lat}\n\t\t\t\t\t\t\tlongitude={p.long}\n\t\t\t\t\t\t\toffsetLeft={-viewport.zoom * 3.5}\n\t\t\t\t\t\t\toffsetTop={-viewport.zoom * 7}\n\t\t\t\t\t\t>\n\t\t\t\t\t\t\t<RoomIcon\n\t\t\t\t\t\t\t\tstyle={{\n\t\t\t\t\t\t\t\t\tfontSize: viewport.zoom * 7,\n\t\t\t\t\t\t\t\t\tcolor: p.username === currentUser ? 'tomato' : 'slateblue',\n\t\t\t\t\t\t\t\t\tcursor: 'pointer',\n\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t\tonClick={() => handleMarkerClick(p._id, p.lat, p.long)}\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t</Marker>\n\t\t\t\t\t\t{p._id === currentPlaceId && (\n\t\t\t\t\t\t\t<Popup\n\t\t\t\t\t\t\t\tlatitude={p.lat}\n\t\t\t\t\t\t\t\tlongitude={p.long}\n\t\t\t\t\t\t\t\tcloseButton={true}\n\t\t\t\t\t\t\t\tcloseOnClick={false}\n\t\t\t\t\t\t\t\tanchor='left'\n\t\t\t\t\t\t\t\tonClose={() => {\n\t\t\t\t\t\t\t\t\tsetCurrentPlaceId(null);\n\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t<div className='card'>\n\t\t\t\t\t\t\t\t\t<label>Place</label>\n\t\t\t\t\t\t\t\t\t<h4 className='place'>{p.title}</h4>\n\t\t\t\t\t\t\t\t\t<label>Review</label>\n\t\t\t\t\t\t\t\t\t<p className='desc'>{p.desc}</p>\n\t\t\t\t\t\t\t\t\t<label>Rating</label>\n\n\t\t\t\t\t\t\t\t\t<div className='stars'>\n\t\t\t\t\t\t\t\t\t\t{Array(p.rating).fill(<StarIcon className='star' />)}\n\t\t\t\t\t\t\t\t\t</div>\n\n\t\t\t\t\t\t\t\t\t<label>Info</label>\n\t\t\t\t\t\t\t\t\t<span className='username'>\n\t\t\t\t\t\t\t\t\t\tCreated by <b>{p.username}</b>\n\t\t\t\t\t\t\t\t\t</span>\n\t\t\t\t\t\t\t\t\t<span className='date'>{format(p.createdAt)}</span>\n\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t</Popup>\n\t\t\t\t\t\t)}\n\t\t\t\t\t</div>\n\t\t\t\t))}\n\t\t\t\t{/* double click to add new pin based on cursor's lon/lat, if there is a new entry, show the pop up */}\n\t\t\t\t{newPlace && (\n\t\t\t\t\t<Popup\n\t\t\t\t\t\tkey={newPlace.createdAt}\n\t\t\t\t\t\tlatitude={newPlace.lat}\n\t\t\t\t\t\tlongitude={newPlace.long}\n\t\t\t\t\t\tcloseButton={true}\n\t\t\t\t\t\tcloseOnClick={false}\n\t\t\t\t\t\tanchor='top'\n\t\t\t\t\t\tonClose={() => {\n\t\t\t\t\t\t\tsetNewPlace(null);\n\t\t\t\t\t\t}}\n\t\t\t\t\t>\n\t\t\t\t\t\t<div>\n\t\t\t\t\t\t\t<form onSubmit={handleSubmit}>\n\t\t\t\t\t\t\t\t<label>Title</label>\n\t\t\t\t\t\t\t\t<input\n\t\t\t\t\t\t\t\t\ttype='text'\n\t\t\t\t\t\t\t\t\tplaceholder='Enter the title'\n\t\t\t\t\t\t\t\t\tonChange={(e) => setTitle(e.target.value)}\n\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t<label>Review</label>\n\t\t\t\t\t\t\t\t<textarea\n\t\t\t\t\t\t\t\t\tplaceholder='Say something about the place.'\n\t\t\t\t\t\t\t\t\tonChange={(e) => setDesc(e.target.value)}\n\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t<label>Rating</label>\n\t\t\t\t\t\t\t\t<select onChange={(e) => setRating(e.target.value)}>\n\t\t\t\t\t\t\t\t\t<option value='1'>1</option>\n\t\t\t\t\t\t\t\t\t<option value='2'>2</option>\n\t\t\t\t\t\t\t\t\t<option value='3'>3</option>\n\t\t\t\t\t\t\t\t\t<option value='4'>4</option>\n\t\t\t\t\t\t\t\t\t<option value='5'>5</option>\n\t\t\t\t\t\t\t\t</select>\n\t\t\t\t\t\t\t\t<button className='submitButton' type='submit'>\n\t\t\t\t\t\t\t\t\tAdd Pin\n\t\t\t\t\t\t\t\t</button>\n\t\t\t\t\t\t\t</form>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</Popup>\n\t\t\t\t)}\n\t\t\t\t{currentUser ? (\n\t\t\t\t\t<button className='button logout' onClick={handleLogout}>\n\t\t\t\t\t\tLog Out\n\t\t\t\t\t</button>\n\t\t\t\t) : (\n\t\t\t\t\t<div className='buttons'>\n\t\t\t\t\t\t<button className='button login' onClick={() => setShowLogin(true)}>\n\t\t\t\t\t\t\tLogin\n\t\t\t\t\t\t</button>\n\t\t\t\t\t\t<button\n\t\t\t\t\t\t\tclassName='button register'\n\t\t\t\t\t\t\tonClick={() => setShowRegister(true)}\n\t\t\t\t\t\t>\n\t\t\t\t\t\t\tRegister\n\t\t\t\t\t\t</button>\n\t\t\t\t\t</div>\n\t\t\t\t)}\n\n\t\t\t\t{showRegister && <Register setShowRegister={setShowRegister} />}\n\t\t\t\t{showLogin && (\n\t\t\t\t\t<Login\n\t\t\t\t\t\tsetShowLogin={setShowLogin}\n\t\t\t\t\t\tmyStorage={myStorage}\n\t\t\t\t\t\tsetCurrentUsername={setCurrentUser}\n\t\t\t\t\t/>\n\t\t\t\t)}\n\t\t\t</ReactMapGL>\n\t\t</div>\n\t);\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport App from './App';\n\nReactDOM.render(\n\t<React.StrictMode>\n\t\t<App />\n\t</React.StrictMode>,\n\tdocument.getElementById('root')\n);\n"],"sourceRoot":""}